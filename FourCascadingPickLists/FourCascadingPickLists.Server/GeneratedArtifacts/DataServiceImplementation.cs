//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using global::System.Linq;

namespace LightSwitchApplication.Implementation
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class ApplicationDataDataService
        : global::Microsoft.LightSwitch.ServerGenerated.Implementation.DataService<global::LightSwitchApplication.Implementation.ApplicationData>
    {
    
        public ApplicationDataDataService() : base()
        {
        }
    
        protected override global::Microsoft.LightSwitch.IDataService GetDataService(global::Microsoft.LightSwitch.IDataWorkspace dataWorkspace)
        {
            return ((global::LightSwitchApplication.DataWorkspace)dataWorkspace).ApplicationData;
        }
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class ApplicationDataServiceImplementation
        : global::Microsoft.LightSwitch.ServerGenerated.Implementation.DataServiceImplementation<global::LightSwitchApplication.Implementation.ApplicationData>
    {
        public ApplicationDataServiceImplementation(global::Microsoft.LightSwitch.IDataService dataService) : base(dataService)
        {
        }
    
    #region Queries
        public global::System.Linq.IQueryable<global::LightSwitchApplication.Implementation.ItemFour> FoursBasedOnThrees(global::System.Nullable<int> Id)
        {
            global::System.Linq.IQueryable<global::LightSwitchApplication.Implementation.ItemFour> query;
            query = global::System.Linq.Queryable.OrderBy(
                global::System.Linq.Queryable.Where(
                    this.GetQuery<global::LightSwitchApplication.Implementation.ItemFour>("ItemFours"),
                    (i) => (Id.HasValue && (i.ItemThree.Id == Id))),
                (i) => i.Name);
            return query;
        }
    
        public global::System.Linq.IQueryable<global::LightSwitchApplication.Implementation.ItemOne> SortedOnes()
        {
            global::System.Linq.IQueryable<global::LightSwitchApplication.Implementation.ItemOne> query;
            query = global::System.Linq.Queryable.OrderBy(
                this.GetQuery<global::LightSwitchApplication.Implementation.ItemOne>("ItemOnes"),
                (i) => i.Name);
            return query;
        }
    
        public global::System.Linq.IQueryable<global::LightSwitchApplication.Implementation.ItemThree> ThreesBasedOnTwos(global::System.Nullable<int> Id)
        {
            global::System.Linq.IQueryable<global::LightSwitchApplication.Implementation.ItemThree> query;
            query = global::System.Linq.Queryable.OrderBy(
                global::System.Linq.Queryable.Where(
                    this.GetQuery<global::LightSwitchApplication.Implementation.ItemThree>("ItemThrees"),
                    (i) => (Id.HasValue && (i.ItemTwo.Id == Id))),
                (i) => i.Name);
            return query;
        }
    
        public global::System.Linq.IQueryable<global::LightSwitchApplication.Implementation.ItemTwo> TwosBasedOnOnes(global::System.Nullable<int> Id)
        {
            global::System.Linq.IQueryable<global::LightSwitchApplication.Implementation.ItemTwo> query;
            query = global::System.Linq.Queryable.OrderBy(
                global::System.Linq.Queryable.Where(
                    this.GetQuery<global::LightSwitchApplication.Implementation.ItemTwo>("ItemTwoes"),
                    (i) => (Id.HasValue && (i.ItemOne.Id == Id))),
                (i) => i.Name);
            return query;
        }
    
    #endregion

    #region Protected Methods
        protected override object CreateObject(global::System.Type type)
        {
            if (type == typeof(global::LightSwitchApplication.Implementation.ItemFour))
            {
                return new global::LightSwitchApplication.Implementation.ItemFour();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.ItemOne))
            {
                return new global::LightSwitchApplication.Implementation.ItemOne();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.ItemThree))
            {
                return new global::LightSwitchApplication.Implementation.ItemThree();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.ItemTwo))
            {
                return new global::LightSwitchApplication.Implementation.ItemTwo();
            }
            if (type == typeof(global::LightSwitchApplication.Implementation.Master))
            {
                return new global::LightSwitchApplication.Implementation.Master();
            }
    
            return base.CreateObject(type);
        }
    
        protected override global::LightSwitchApplication.Implementation.ApplicationData CreateObjectContext()
        {
            string assemblyName = global::System.Reflection.Assembly.GetExecutingAssembly().GetName().Name;
            return new global::LightSwitchApplication.Implementation.ApplicationData(this.GetEntityConnectionString(
                "_IntrinsicData",
                "res://" + assemblyName + "/ApplicationData.csdl|res://" + assemblyName + "/ApplicationData.ssdl|res://" + assemblyName + "/ApplicationData.msl",
                "System.Data.SqlClient",
                true));
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IEntityImplementation CreateEntityImplementation<T>()
        {
            if (typeof(T) == typeof(global::LightSwitchApplication.ItemFour))
            {
                return new global::LightSwitchApplication.Implementation.ItemFour();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.ItemOne))
            {
                return new global::LightSwitchApplication.Implementation.ItemOne();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.ItemThree))
            {
                return new global::LightSwitchApplication.Implementation.ItemThree();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.ItemTwo))
            {
                return new global::LightSwitchApplication.Implementation.ItemTwo();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Master))
            {
                return new global::LightSwitchApplication.Implementation.Master();
            }
            return null;
        }
    
    #endregion
    
    }
    
    #region DataServiceImplementationFactory
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.IDataServiceFactory))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class __DataServiceFactory :
        global::Microsoft.LightSwitch.ServerGenerated.Implementation.DataServiceFactory
    {
    
        protected override global::Microsoft.LightSwitch.IDataService CreateDataService(global::System.Type dataServiceType)
        {
            if (dataServiceType == typeof(global::LightSwitchApplication.ApplicationDataService))
            {
                return new global::LightSwitchApplication.ApplicationDataService();
            }
            return base.CreateDataService(dataServiceType);
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IDataServiceImplementation CreateDataServiceImplementation<TDataService>(TDataService dataService)
        {
            if (typeof(TDataService) == typeof(global::LightSwitchApplication.ApplicationDataService))
            {
                return new global::LightSwitchApplication.Implementation.ApplicationDataServiceImplementation(dataService);
            }
            return base.CreateDataServiceImplementation(dataService);
        }
    }
    #endregion
    
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.ITypeMappingProvider))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class __TypeMapping
        : global::Microsoft.LightSwitch.Internal.ITypeMappingProvider
    {
        global::System.Type global::Microsoft.LightSwitch.Internal.ITypeMappingProvider.GetImplementationType(global::System.Type definitionType)
        {
            if (typeof(global::LightSwitchApplication.ItemFour) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.ItemFour);
            }
            if (typeof(global::LightSwitchApplication.ItemOne) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.ItemOne);
            }
            if (typeof(global::LightSwitchApplication.ItemThree) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.ItemThree);
            }
            if (typeof(global::LightSwitchApplication.ItemTwo) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.ItemTwo);
            }
            if (typeof(global::LightSwitchApplication.Master) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Master);
            }
            return null;
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class ItemFour :
        global::LightSwitchApplication.ItemFour.DetailsClass.IImplementation,
        global::Microsoft.LightSwitch.Internal.ICreatedModifiedPropertiesImplementation
    
    {
    
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.ItemFour.DetailsClass.IImplementation.ItemThree
        {
            get
            {
                return this.ItemThree;
            }
            set
            {
                this.ItemThree = (global::LightSwitchApplication.Implementation.ItemThree)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("ItemThree");
                }
            }
        }
        
        global::System.Collections.IEnumerable global::LightSwitchApplication.ItemFour.DetailsClass.IImplementation.Masters
        {
            get
            {
                return this.Masters;
            }
        }
        
        partial void OnItemFour_ItemThreeChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("ItemThree");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class ItemOne :
        global::LightSwitchApplication.ItemOne.DetailsClass.IImplementation,
        global::Microsoft.LightSwitch.Internal.ICreatedModifiedPropertiesImplementation
    
    {
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.ItemOne.DetailsClass.IImplementation.ItemTwoes
        {
            get
            {
                return this.ItemTwoes;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class ItemThree :
        global::LightSwitchApplication.ItemThree.DetailsClass.IImplementation,
        global::Microsoft.LightSwitch.Internal.ICreatedModifiedPropertiesImplementation
    
    {
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.ItemThree.DetailsClass.IImplementation.ItemFours
        {
            get
            {
                return this.ItemFours;
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.ItemThree.DetailsClass.IImplementation.ItemTwo
        {
            get
            {
                return this.ItemTwo;
            }
            set
            {
                this.ItemTwo = (global::LightSwitchApplication.Implementation.ItemTwo)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("ItemTwo");
                }
            }
        }
        
        partial void OnItemThree_ItemTwoChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("ItemTwo");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class ItemTwo :
        global::LightSwitchApplication.ItemTwo.DetailsClass.IImplementation,
        global::Microsoft.LightSwitch.Internal.ICreatedModifiedPropertiesImplementation
    
    {
    
        global::System.Collections.IEnumerable global::LightSwitchApplication.ItemTwo.DetailsClass.IImplementation.ItemThrees
        {
            get
            {
                return this.ItemThrees;
            }
        }
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.ItemTwo.DetailsClass.IImplementation.ItemOne
        {
            get
            {
                return this.ItemOne;
            }
            set
            {
                this.ItemOne = (global::LightSwitchApplication.Implementation.ItemOne)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("ItemOne");
                }
            }
        }
        
        partial void OnItemTwo_ItemOneChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("ItemOne");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public partial class Master :
        global::LightSwitchApplication.Master.DetailsClass.IImplementation,
        global::Microsoft.LightSwitch.Internal.ICreatedModifiedPropertiesImplementation
    
    {
    
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Master.DetailsClass.IImplementation.ItemFour
        {
            get
            {
                return this.ItemFour;
            }
            set
            {
                this.ItemFour = (global::LightSwitchApplication.Implementation.ItemFour)value;
                if (this.__host != null)
                {
                    this.__host.RaisePropertyChanged("ItemFour");
                }
            }
        }
        
        partial void OnItemFour_MasterChanged()
        {
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged("ItemFour");
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(propertyName);
            }
        }
        #endregion
    }
    
}

