//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemFours_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemFours_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemFours_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemFours_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemFours_Inserting(global::LightSwitchApplication.ItemFour entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemFours_Inserted(global::LightSwitchApplication.ItemFour entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemFours_Updating(global::LightSwitchApplication.ItemFour entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemFours_Updated(global::LightSwitchApplication.ItemFour entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemFours_Deleting(global::LightSwitchApplication.ItemFour entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemFours_Deleted(global::LightSwitchApplication.ItemFour entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemFours_Validate(global::LightSwitchApplication.ItemFour entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemFours_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ItemFour, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemOnes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemOnes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemOnes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemOnes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemOnes_Inserting(global::LightSwitchApplication.ItemOne entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemOnes_Inserted(global::LightSwitchApplication.ItemOne entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemOnes_Updating(global::LightSwitchApplication.ItemOne entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemOnes_Updated(global::LightSwitchApplication.ItemOne entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemOnes_Deleting(global::LightSwitchApplication.ItemOne entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemOnes_Deleted(global::LightSwitchApplication.ItemOne entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemOnes_Validate(global::LightSwitchApplication.ItemOne entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemOnes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ItemOne, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemThrees_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemThrees_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemThrees_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemThrees_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemThrees_Inserting(global::LightSwitchApplication.ItemThree entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemThrees_Inserted(global::LightSwitchApplication.ItemThree entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemThrees_Updating(global::LightSwitchApplication.ItemThree entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemThrees_Updated(global::LightSwitchApplication.ItemThree entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemThrees_Deleting(global::LightSwitchApplication.ItemThree entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemThrees_Deleted(global::LightSwitchApplication.ItemThree entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemThrees_Validate(global::LightSwitchApplication.ItemThree entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemThrees_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ItemThree, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemTwoes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemTwoes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemTwoes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemTwoes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemTwoes_Inserting(global::LightSwitchApplication.ItemTwo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemTwoes_Inserted(global::LightSwitchApplication.ItemTwo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemTwoes_Updating(global::LightSwitchApplication.ItemTwo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemTwoes_Updated(global::LightSwitchApplication.ItemTwo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemTwoes_Deleting(global::LightSwitchApplication.ItemTwo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemTwoes_Deleted(global::LightSwitchApplication.ItemTwo entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemTwoes_Validate(global::LightSwitchApplication.ItemTwo entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemTwoes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ItemTwo, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Masters_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Masters_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Masters_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Masters_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Masters_Inserting(global::LightSwitchApplication.Master entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Masters_Inserted(global::LightSwitchApplication.Master entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Masters_Updating(global::LightSwitchApplication.Master entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Masters_Updated(global::LightSwitchApplication.Master entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Masters_Deleting(global::LightSwitchApplication.Master entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Masters_Deleted(global::LightSwitchApplication.Master entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Masters_Validate(global::LightSwitchApplication.Master entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Masters_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Master, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FoursBasedOnThrees_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FoursBasedOnThrees_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FoursBasedOnThrees_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ItemFour> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FoursBasedOnThrees_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ItemFour> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FoursBasedOnThrees_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SortedOnes_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SortedOnes_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SortedOnes_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.ItemOne> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SortedOnes_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ItemOne> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SortedOnes_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ThreesBasedOnTwos_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ThreesBasedOnTwos_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ThreesBasedOnTwos_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ItemThree> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ThreesBasedOnTwos_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ItemThree> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ThreesBasedOnTwos_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TwosBasedOnOnes_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void TwosBasedOnOnes_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TwosBasedOnOnes_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ItemTwo> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void TwosBasedOnOnes_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ItemTwo> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void TwosBasedOnOnes_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ItemFour>
                __ItemFoursEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ItemFour>(
                    "ItemFours",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemFours_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemFours_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemFours_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemFours_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemFours_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemFours_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemFours_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemFours_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemFours_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemFours_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemFours_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemFours_Filter);
            private static bool __ItemFours_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ItemFours_CanInsert(ref result);
                return result;
            }
            private static bool __ItemFours_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ItemFours_CanUpdate(ref result);
                return result;
            }
            private static bool __ItemFours_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ItemFours_CanDelete(ref result);
                return result;
            }
            private static bool __ItemFours_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ItemFours_CanRead(ref result);
                return result;
            }
            private static void __ItemFours_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemFour e)
            {
                d.ItemFours_Inserting(e);
            }
            private static void __ItemFours_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemFour e)
            {
                d.ItemFours_Inserted(e);
            }
            private static void __ItemFours_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemFour e)
            {
                d.ItemFours_Updating(e);
            }
            private static void __ItemFours_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemFour e)
            {
                d.ItemFours_Updated(e);
            }
            private static void __ItemFours_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemFour e)
            {
                d.ItemFours_Deleting(e);
            }
            private static void __ItemFours_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemFour e)
            {
                d.ItemFours_Deleted(e);
            }
            private static void __ItemFours_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemFour e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ItemFours_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ItemFour, bool>> __ItemFours_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ItemFour, bool>> filter = null;
                d.ItemFours_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ItemOne>
                __ItemOnesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ItemOne>(
                    "ItemOnes",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemOnes_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemOnes_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemOnes_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemOnes_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemOnes_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemOnes_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemOnes_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemOnes_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemOnes_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemOnes_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemOnes_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemOnes_Filter);
            private static bool __ItemOnes_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ItemOnes_CanInsert(ref result);
                return result;
            }
            private static bool __ItemOnes_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ItemOnes_CanUpdate(ref result);
                return result;
            }
            private static bool __ItemOnes_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ItemOnes_CanDelete(ref result);
                return result;
            }
            private static bool __ItemOnes_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ItemOnes_CanRead(ref result);
                return result;
            }
            private static void __ItemOnes_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemOne e)
            {
                d.ItemOnes_Inserting(e);
            }
            private static void __ItemOnes_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemOne e)
            {
                d.ItemOnes_Inserted(e);
            }
            private static void __ItemOnes_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemOne e)
            {
                d.ItemOnes_Updating(e);
            }
            private static void __ItemOnes_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemOne e)
            {
                d.ItemOnes_Updated(e);
            }
            private static void __ItemOnes_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemOne e)
            {
                d.ItemOnes_Deleting(e);
            }
            private static void __ItemOnes_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemOne e)
            {
                d.ItemOnes_Deleted(e);
            }
            private static void __ItemOnes_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemOne e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ItemOnes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ItemOne, bool>> __ItemOnes_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ItemOne, bool>> filter = null;
                d.ItemOnes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ItemThree>
                __ItemThreesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ItemThree>(
                    "ItemThrees",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemThrees_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemThrees_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemThrees_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemThrees_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemThrees_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemThrees_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemThrees_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemThrees_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemThrees_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemThrees_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemThrees_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemThrees_Filter);
            private static bool __ItemThrees_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ItemThrees_CanInsert(ref result);
                return result;
            }
            private static bool __ItemThrees_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ItemThrees_CanUpdate(ref result);
                return result;
            }
            private static bool __ItemThrees_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ItemThrees_CanDelete(ref result);
                return result;
            }
            private static bool __ItemThrees_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ItemThrees_CanRead(ref result);
                return result;
            }
            private static void __ItemThrees_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemThree e)
            {
                d.ItemThrees_Inserting(e);
            }
            private static void __ItemThrees_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemThree e)
            {
                d.ItemThrees_Inserted(e);
            }
            private static void __ItemThrees_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemThree e)
            {
                d.ItemThrees_Updating(e);
            }
            private static void __ItemThrees_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemThree e)
            {
                d.ItemThrees_Updated(e);
            }
            private static void __ItemThrees_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemThree e)
            {
                d.ItemThrees_Deleting(e);
            }
            private static void __ItemThrees_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemThree e)
            {
                d.ItemThrees_Deleted(e);
            }
            private static void __ItemThrees_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemThree e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ItemThrees_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ItemThree, bool>> __ItemThrees_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ItemThree, bool>> filter = null;
                d.ItemThrees_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ItemTwo>
                __ItemTwoesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ItemTwo>(
                    "ItemTwoes",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemTwoes_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemTwoes_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemTwoes_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemTwoes_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemTwoes_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemTwoes_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemTwoes_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemTwoes_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemTwoes_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemTwoes_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemTwoes_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ItemTwoes_Filter);
            private static bool __ItemTwoes_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ItemTwoes_CanInsert(ref result);
                return result;
            }
            private static bool __ItemTwoes_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ItemTwoes_CanUpdate(ref result);
                return result;
            }
            private static bool __ItemTwoes_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ItemTwoes_CanDelete(ref result);
                return result;
            }
            private static bool __ItemTwoes_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ItemTwoes_CanRead(ref result);
                return result;
            }
            private static void __ItemTwoes_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemTwo e)
            {
                d.ItemTwoes_Inserting(e);
            }
            private static void __ItemTwoes_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemTwo e)
            {
                d.ItemTwoes_Inserted(e);
            }
            private static void __ItemTwoes_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemTwo e)
            {
                d.ItemTwoes_Updating(e);
            }
            private static void __ItemTwoes_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemTwo e)
            {
                d.ItemTwoes_Updated(e);
            }
            private static void __ItemTwoes_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemTwo e)
            {
                d.ItemTwoes_Deleting(e);
            }
            private static void __ItemTwoes_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemTwo e)
            {
                d.ItemTwoes_Deleted(e);
            }
            private static void __ItemTwoes_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ItemTwo e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ItemTwoes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ItemTwo, bool>> __ItemTwoes_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ItemTwo, bool>> filter = null;
                d.ItemTwoes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Master>
                __MastersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Master>(
                    "Masters",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Masters_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Masters_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Masters_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Masters_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Masters_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Masters_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Masters_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Masters_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Masters_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Masters_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Masters_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Masters_Filter);
            private static bool __Masters_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Masters_CanInsert(ref result);
                return result;
            }
            private static bool __Masters_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Masters_CanUpdate(ref result);
                return result;
            }
            private static bool __Masters_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Masters_CanDelete(ref result);
                return result;
            }
            private static bool __Masters_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Masters_CanRead(ref result);
                return result;
            }
            private static void __Masters_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Master e)
            {
                d.Masters_Inserting(e);
            }
            private static void __Masters_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Master e)
            {
                d.Masters_Inserted(e);
            }
            private static void __Masters_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Master e)
            {
                d.Masters_Updating(e);
            }
            private static void __Masters_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Master e)
            {
                d.Masters_Updated(e);
            }
            private static void __Masters_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Master e)
            {
                d.Masters_Deleting(e);
            }
            private static void __Masters_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Master e)
            {
                d.Masters_Deleted(e);
            }
            private static void __Masters_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Master e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Masters_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Master, bool>> __Masters_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Master, bool>> filter = null;
                d.Masters_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ItemFour>
                __FoursBasedOnThreesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ItemFour>(
                    "FoursBasedOnThrees",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FoursBasedOnThrees_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FoursBasedOnThrees_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FoursBasedOnThrees_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FoursBasedOnThrees_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FoursBasedOnThrees_PreprocessQuery);
            private static bool __FoursBasedOnThrees_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.FoursBasedOnThrees_CanExecute(ref r);
                return r;
            }
            private static void __FoursBasedOnThrees_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.FoursBasedOnThrees_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __FoursBasedOnThrees_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.FoursBasedOnThrees_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ItemFour>)args[1]);
            }
            private static void __FoursBasedOnThrees_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.FoursBasedOnThrees_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __FoursBasedOnThrees_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ItemFour> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ItemFour>)args[1];
                d.FoursBasedOnThrees_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ItemOne>
                __SortedOnesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ItemOne>(
                    "SortedOnes",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortedOnes_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortedOnes_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortedOnes_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortedOnes_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortedOnes_PreprocessQuery);
            private static bool __SortedOnes_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SortedOnes_CanExecute(ref r);
                return r;
            }
            private static void __SortedOnes_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SortedOnes_Executing();
            }
            private static void __SortedOnes_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SortedOnes_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ItemOne>)args[0]);
            }
            private static void __SortedOnes_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SortedOnes_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __SortedOnes_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ItemOne> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ItemOne>)args[0];
                d.SortedOnes_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ItemThree>
                __ThreesBasedOnTwosEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ItemThree>(
                    "ThreesBasedOnTwos",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ThreesBasedOnTwos_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ThreesBasedOnTwos_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ThreesBasedOnTwos_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ThreesBasedOnTwos_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ThreesBasedOnTwos_PreprocessQuery);
            private static bool __ThreesBasedOnTwos_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ThreesBasedOnTwos_CanExecute(ref r);
                return r;
            }
            private static void __ThreesBasedOnTwos_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ThreesBasedOnTwos_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ThreesBasedOnTwos_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ThreesBasedOnTwos_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ItemThree>)args[1]);
            }
            private static void __ThreesBasedOnTwos_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ThreesBasedOnTwos_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ThreesBasedOnTwos_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ItemThree> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ItemThree>)args[1];
                d.ThreesBasedOnTwos_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ItemTwo>
                __TwosBasedOnOnesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ItemTwo>(
                    "TwosBasedOnOnes",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TwosBasedOnOnes_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TwosBasedOnOnes_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TwosBasedOnOnes_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TwosBasedOnOnes_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TwosBasedOnOnes_PreprocessQuery);
            private static bool __TwosBasedOnOnes_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.TwosBasedOnOnes_CanExecute(ref r);
                return r;
            }
            private static void __TwosBasedOnOnes_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.TwosBasedOnOnes_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __TwosBasedOnOnes_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.TwosBasedOnOnes_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ItemTwo>)args[1]);
            }
            private static void __TwosBasedOnOnes_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.TwosBasedOnOnes_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __TwosBasedOnOnes_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ItemTwo> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ItemTwo>)args[1];
                d.TwosBasedOnOnes_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
